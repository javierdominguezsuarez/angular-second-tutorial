{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.items = [];\n  }\n  addToCart(product) {\n    this.items.push(product);\n  }\n  getItems() {\n    return this.items;\n  }\n  getTotalPrice() {\n    return this.items.map(item => item.price).reduce((prev, curr) => prev + curr, 0);\n  }\n  clearCart() {\n    this.items = [];\n    return this.items;\n  }\n  getShippingPrices() {\n    return this.http.get('/assets/shipping.json');\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAqBtBC,YAAqBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IApBzB,UAAK,GAAc,EAAE;EAoBoB;EAnBzCC,SAAS,CAACC,OAAgB;IACxB,IAAI,CAACC,KAAK,CAACC,IAAI,CAACF,OAAO,CAAC;EAC1B;EACAG,QAAQ;IACN,OAAO,IAAI,CAACF,KAAK;EACnB;EACAG,aAAa;IACX,OAAO,IAAI,CAACH,KAAK,CACdI,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC,CACvBC,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,GAAGC,IAAI,EAAE,CAAC,CAAC;EAC3C;EAEAC,SAAS;IACP,IAAI,CAACV,KAAK,GAAG,EAAE;IACf,OAAO,IAAI,CAACA,KAAK;EACnB;EACAW,iBAAiB;IACf,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAkC,uBAAuB,CAAC;EAChF;;AApBWjB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["CartService","constructor","http","addToCart","product","items","push","getItems","getTotalPrice","map","item","price","reduce","prev","curr","clearCart","getShippingPrices","get","factory","providedIn"],"sourceRoot":"","sources":["/home/angular-second-tutorial/src/app/cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Product } from './products';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  items: Product[] = []\n  addToCart(product: Product){\n    this.items.push(product)\n  }\n  getItems(){\n    return this.items\n  }\n  getTotalPrice(){\n    return this.items\n      .map(item => item.price)\n      .reduce((prev, curr) => prev + curr, 0)\n  }\n  removeItem()\n  clearCart(){\n    this.items = []\n    return this.items\n  }\n  getShippingPrices() {\n    return this.http.get<{type: string, price: number}[]>('/assets/shipping.json');\n  }\n  constructor( private http: HttpClient) { }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}